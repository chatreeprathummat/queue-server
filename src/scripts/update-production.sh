#!/bin/bash

echo "ЁЯФД р╕нр╕▒р╕Юр╣Ар╕Фр╕Чр╕гр╕░р╕Ър╕Ъ Nursing System - Production"
echo "========================================"

# р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Юр╕▓р╕гр╕▓р╕бр╕┤р╣Ар╕Хр╕нр╕гр╣М
if [ $# -eq 0 ]; then
    echo "тЭМ р╕Бр╕гр╕╕р╕Ур╕▓р╕гр╕░р╕Ър╕╕р╣Ар╕кр╣Йр╕Щр╕Чр╕▓р╕Зр╣Вр╕Др╣Йр╕Фр╣Гр╕лр╕бр╣И"
    echo "ЁЯТб р╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ: ./update-production.sh /path/to/new/code"
    exit 1
fi

NEW_CODE_PATH="$1"

# р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╕бр╕╡р╣Вр╕Яр╕ер╣Ар╕Фр╕нр╕гр╣Мр╣Вр╕Др╣Йр╕Фр╣Гр╕лр╕бр╣Ир╕лр╕гр╕╖р╕нр╣Др╕бр╣И
if [ ! -d "$NEW_CODE_PATH" ]; then
    echo "тЭМ р╣Др╕бр╣Ир╕Юр╕Ър╣Вр╕Яр╕ер╣Ар╕Фр╕нр╕гр╣М: $NEW_CODE_PATH"
    exit 1
fi

# р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╕бр╕╡ production-build р╕лр╕гр╕╖р╕нр╣Др╕бр╣И
if [ ! -d "production-build" ]; then
    echo "тЭМ р╣Др╕бр╣Ир╕Юр╕Ър╣Вр╕Яр╕ер╣Ар╕Фр╕нр╕гр╣М production-build"
    echo "ЁЯТб р╕Бр╕гр╕╕р╕Ур╕▓р╕гр╕▒р╕Щ ./scripts/deploy-production.sh р╕Бр╣Ир╕нр╕Щ"
    exit 1
fi

echo "ЁЯУН р╕нр╕▒р╕Юр╣Ар╕Фр╕Чр╕Ир╕▓р╕Б: $NEW_CODE_PATH"
echo "ЁЯУН р╣Др╕Ыр╕вр╕▒р╕З: production-build/"

# р╕кр╕гр╣Йр╕▓р╕З backup
BACKUP_DIR="backup-$(date +%Y%m%d-%H%M%S)"
echo "ЁЯТ╛ р╕кр╕гр╣Йр╕▓р╕З backup: $BACKUP_DIR"
cp -r production-build "$BACKUP_DIR"

cd production-build

# р╕лр╕вр╕╕р╕Ф server р╕Бр╣Ир╕нр╕Щр╕нр╕▒р╕Юр╣Ар╕Фр╕Ч
echo "ЁЯЫС р╕лр╕вр╕╕р╕Ф server..."
./stop-production.sh

# р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╣Др╕Яр╕ер╣М config р╣Ар╕Фр╕┤р╕б
echo "ЁЯТ╛ р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╣Др╕Яр╕ер╣М config..."
cp config/production.env ../temp-production.env 2>/dev/null || true
cp -r config/certs ../temp-certs 2>/dev/null || true

# р╕нр╕▒р╕Юр╣Ар╕Фр╕Чр╣Др╕Яр╕ер╣Мр╣Вр╕Др╣Йр╕Ф
echo "ЁЯУЛ р╕нр╕▒р╕Юр╣Ар╕Фр╕Чр╣Др╕Яр╕ер╣Мр╣Вр╕Др╣Йр╕Ф..."

# р╕Др╕▒р╕Фр╕ер╕нр╕Бр╣Др╕Яр╕ер╣Мр╣Гр╕лр╕бр╣И (р╕вр╕Бр╣Ар╕зр╣Йр╕Щ config р╣Бр╕ер╕░ node_modules)
rsync -av --exclude='node_modules' --exclude='config/production.env' --exclude='config/certs' "$NEW_CODE_PATH/" ./

# р╕Др╕╖р╕Щр╣Др╕Яр╕ер╣М config
echo "ЁЯФД р╕Др╕╖р╕Щр╣Др╕Яр╕ер╣М config..."
cp ../temp-production.env config/production.env 2>/dev/null || true
cp -r ../temp-certs/* config/certs/ 2>/dev/null || true

# р╕ер╕Ър╣Др╕Яр╕ер╣Мр╕Кр╕▒р╣Ир╕зр╕Др╕гр╕▓р╕з
rm -f ../temp-production.env
rm -rf ../temp-certs

# р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╕бр╕╡ package.json р╣Гр╕лр╕бр╣Ир╕лр╕гр╕╖р╕нр╣Др╕бр╣И
if [ -f "$NEW_CODE_PATH/package.json" ]; then
    echo "ЁЯУж р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ dependencies..."
    
    # р╣Ар╕Ыр╕гр╕╡р╕вр╕Ър╣Ар╕Чр╕╡р╕вр╕Ъ package.json
    CURRENT_HASH=$(md5sum package.json | cut -d' ' -f1)
    NEW_HASH=$(md5sum "$NEW_CODE_PATH/package.json" | cut -d' ' -f1)
    
    if [ "$CURRENT_HASH" != "$NEW_HASH" ]; then
        echo "ЁЯУж р╕нр╕▒р╕Юр╣Ар╕Фр╕Ч dependencies..."
        cp "$NEW_CODE_PATH/package.json" ./
        cp "$NEW_CODE_PATH/package-lock.json" ./ 2>/dev/null || true
        npm ci --only=production --silent
    else
        echo "тЬЕ dependencies р╣Др╕бр╣Ир╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╣Бр╕Ыр╕ер╕З"
    fi
fi

# р╕Чр╕Фр╕кр╕нр╕Ъ configuration
echo "ЁЯФН р╕Чр╕Фр╕кр╕нр╕Ъ configuration..."
node -e "
try {
    const config = require('./config/config');
    console.log('тЬЕ Configuration р╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З');
} catch(err) {
    console.log('тЭМ Configuration р╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф:', err.message);
    process.exit(1);
}
"

if [ $? -ne 0 ]; then
    echo "тЭМ Configuration р╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф - р╕Бр╕│р╕ер╕▒р╕Зр╕Др╕╖р╕Щр╕Др╣Ир╕▓ backup..."
    cd ..
    rm -rf production-build
    mv "$BACKUP_DIR" production-build
    echo "тЬЕ р╕Др╕╖р╕Щр╕Др╣Ир╕▓ backup р╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕в"
    exit 1
fi

# р╕Чр╕Фр╕кр╕нр╕Ъ syntax
echo "ЁЯФН р╕Чр╕Фр╕кр╕нр╕Ъ syntax..."
node -c server.js
if [ $? -ne 0 ]; then
    echo "тЭМ Syntax р╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф - р╕Бр╕│р╕ер╕▒р╕Зр╕Др╕╖р╕Щр╕Др╣Ир╕▓ backup..."
    cd ..
    rm -rf production-build
    mv "$BACKUP_DIR" production-build
    echo "тЬЕ р╕Др╕╖р╕Щр╕Др╣Ир╕▓ backup р╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕в"
    exit 1
fi

# р╣Ар╕гр╕┤р╣Ир╕б server р╣Гр╕лр╕бр╣И
echo "ЁЯЪА р╣Ар╕гр╕┤р╣Ир╕б server..."
./start-production.sh

# р╕гр╕нр╕кр╕▒р╕Бр╕Др╕гр╕╣р╣Ир╣Бр╕ер╣Йр╕зр╕Чр╕Фр╕кр╕нр╕Ъ
sleep 5

# р╕Чр╕Фр╕кр╕нр╕Ър╕зр╣Ир╕▓ server р╕Чр╕│р╕Зр╕▓р╕Щр╕лр╕гр╕╖р╕нр╣Др╕бр╣И
HTTP_PORT=$(grep "HTTP_PORT=" config/production.env | cut -d'=' -f2)
HTTP_PORT=${HTTP_PORT:-5009}

echo "ЁЯФН р╕Чр╕Фр╕кр╕нр╕Ъ API..."
curl -f http://localhost:$HTTP_PORT/api/health > /dev/null 2>&1

if [ $? -eq 0 ]; then
    echo "тЬЕ р╕нр╕▒р╕Юр╣Ар╕Фр╕Чр╕кр╕│р╣Ар╕гр╣Зр╕И!"
    echo "ЁЯЧСя╕П  р╕ер╕Ъ backup..."
    cd ..
    rm -rf "$BACKUP_DIR"
    echo ""
    echo "ЁЯУЛ р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ log:"
    echo "   tail -f logs/production.log"
    echo ""
    echo "ЁЯФН р╕Чр╕Фр╕кр╕нр╕Ър╕гр╕░р╕Ър╕Ъ:"
    echo "   curl http://localhost:$HTTP_PORT/api/health"
else
    echo "тЭМ Server р╣Др╕бр╣Ир╕Хр╕нр╕Ър╕кр╕Щр╕нр╕З - р╕Бр╕│р╕ер╕▒р╕Зр╕Др╕╖р╕Щр╕Др╣Ир╕▓ backup..."
    ./stop-production.sh
    cd ..
    rm -rf production-build
    mv "$BACKUP_DIR" production-build
    cd production-build
    ./start-production.sh
    echo "тЬЕ р╕Др╕╖р╕Щр╕Др╣Ир╕▓ backup р╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕в"
    exit 1
fi

echo ""
echo "ЁЯОЙ р╕нр╕▒р╕Юр╣Ар╕Фр╕Чр╕гр╕░р╕Ър╕Ър╕кр╕│р╣Ар╕гр╣Зр╕И!"
echo "==================="
echo "ЁЯУЕ р╣Ар╕зр╕ер╕▓: $(date)"
echo "ЁЯМР URL: http://localhost:$HTTP_PORT"
echo "ЁЯУЛ Log: tail -f ../logs/production.log" 